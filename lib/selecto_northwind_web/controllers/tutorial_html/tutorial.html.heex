<Layouts.flash_group flash={@flash} />

<div class="min-h-screen bg-gradient-to-br from-base-100 to-base-200">
  <!-- Header Section -->
  <div class="bg-primary text-primary-content">
    <div class="px-4 py-12 sm:px-6 lg:px-8">
      <div class="mx-auto max-w-4xl">
        <div class="flex items-center gap-4 mb-6">
          <div class="p-3 bg-primary-content/10 rounded-xl">
            <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25A8.966 8.966 0 0118 3.75c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0118 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
            </svg>
          </div>
          <div>
            <h1 class="text-4xl font-bold mb-2">Selecto Integration Tutorial</h1>
            <p class="text-xl text-primary-content/80">Step-by-step guide to integrate Selecto libraries with Phoenix</p>
          </div>
        </div>
        
        <div class="flex flex-wrap gap-3">
          <div class="badge badge-outline badge-lg text-primary-content border-primary-content/30">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
            </svg>
            Phoenix LiveView
          </div>
          <div class="badge badge-outline badge-lg text-primary-content border-primary-content/30">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4" />
            </svg>
            Elixir & Ecto
          </div>
          <div class="badge badge-outline badge-lg text-primary-content border-primary-content/30">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            </svg>
            Data Visualization
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Content Section -->
  <div class="px-4 py-12 sm:px-6 lg:px-8">
    <div class="mx-auto max-w-4xl">
      <!-- Navigation breadcrumb -->
      <div class="breadcrumbs text-sm mb-8">
        <ul>
          <li><a href="/" class="text-primary hover:text-primary-focus">Home</a></li>
          <li class="text-base-content/60">Tutorial</li>
        </ul>
      </div>

      <!-- Tutorial Content -->
      <div class="space-y-8">
        
        <!-- Inline JavaScript for copy functionality -->
        <script>
          function copyCode(button, text) {
            navigator.clipboard.writeText(text).then(function() {
              const originalText = button.innerHTML;
              button.innerHTML = 'âœ“ Copied!';
              button.className = button.className.replace('btn-primary', 'btn-success');
              setTimeout(function() {
                button.innerHTML = originalText;
                button.className = button.className.replace('btn-success', 'btn-primary');
              }, 2000);
            });
          }
        </script>
        <!-- Tutorial Structure Card -->
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title text-2xl mb-4">
              <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
              Tutorial Structure
            </h2>
            <p class="text-base-content/80 mb-4">This tutorial is organized into steps, with each step building upon the previous one. You can:</p>
            <div class="grid gap-3">
              <div class="flex items-center gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-2 h-2 bg-primary rounded-full"></div>
                <span>Follow along from the beginning by checking out the <code class="bg-base-300 px-2 py-1 rounded text-sm">main</code> branch</span>
              </div>
              <div class="flex items-center gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-2 h-2 bg-primary rounded-full"></div>
                <span>Jump to any step by checking out <code class="bg-base-300 px-2 py-1 rounded text-sm">tutorial-step-N</code> (where N is the step number)</span>
              </div>
              <div class="flex items-center gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-2 h-2 bg-primary rounded-full"></div>
                <span>Compare your work with the reference implementation by diffing against the step branches</span>
              </div>
            </div>
          </div>
        </div>

        <!-- Prerequisites Card -->
        <div class="card bg-warning/10 border border-warning/20 shadow-lg">
          <div class="card-body">
            <h2 class="card-title text-2xl mb-4 text-warning">
              <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z" />
              </svg>
              Prerequisites
            </h2>
            <p class="text-base-content/80 mb-4">Before starting, ensure you have:</p>
            <div class="grid sm:grid-cols-3 gap-4">
              <div class="flex items-center gap-3 p-4 bg-base-100 rounded-lg border">
                <div class="w-8 h-8 bg-purple-500 rounded-lg flex items-center justify-center text-white font-bold">E</div>
                <div>
                  <div class="font-semibold">Elixir 1.14+</div>
                  <div class="text-sm text-base-content/60">installed</div>
                </div>
              </div>
              <div class="flex items-center gap-3 p-4 bg-base-100 rounded-lg border">
                <div class="w-8 h-8 bg-orange-500 rounded-lg flex items-center justify-center text-white font-bold">P</div>
                <div>
                  <div class="font-semibold">Phoenix 1.8+</div>
                  <div class="text-sm text-base-content/60">framework knowledge</div>
                </div>
              </div>
              <div class="flex items-center gap-3 p-4 bg-base-100 rounded-lg border">
                <div class="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center text-white font-bold">DB</div>
                <div>
                  <div class="font-semibold">PostgreSQL</div>
                  <div class="text-sm text-base-content/60">database running</div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Step 0 -->
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <div class="flex items-center gap-4 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-primary to-secondary rounded-xl flex items-center justify-center text-white font-bold text-lg">0</div>
              <div>
                <h2 class="card-title text-2xl">Set Up the Basic Phoenix Project</h2>
                <p class="text-base-content/70">Initialize your development environment</p>
              </div>
            </div>
            <p class="text-base-content/80 mb-6">Before integrating Selecto, you need to set up the basic Phoenix application with the Northwind database. This step ensures you have a working Phoenix app with the database schema and sample data loaded.</p>
            
            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                  </svg>
                  Clone the Repository
                </h3>
                <div class="relative">
                  <div class="mockup-code">
                    <pre data-prefix="$"><code class="text-green-400">git clone &lt;repository-url&gt;</code></pre>
                    <pre data-prefix="$"><code class="text-green-400">cd selecto_northwind</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'git clone <repository-url>\ncd selecto_northwind')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10" />
                  </svg>
                  Initialize Git Submodules
                </h3>
                <p class="text-base-content/70 mb-3">The project includes Selecto libraries as git submodules in the vendor directory:</p>
                <div class="relative">
                  <div class="mockup-code">
                    <pre data-prefix="$"><code class="text-green-400">git submodule update --init --recursive</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'git submodule update --init --recursive')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                  </svg>
                  Install Dependencies
                </h3>
                <p class="text-base-content/70 mb-3">Install all Phoenix and Elixir dependencies:</p>
                <div class="relative">
                  <div class="mockup-code">
                    <pre data-prefix="$"><code class="text-green-400">mix setup</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'mix setup')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
                <div class="alert alert-info">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">This command runs:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>â€¢ <code>mix deps.get</code> - Fetches all dependencies</li>
                      <li>â€¢ <code>mix ecto.create</code> - Creates the database</li>
                      <li>â€¢ <code>mix ecto.migrate</code> - Runs database migrations</li>
                      <li>â€¢ <code>mix run priv/repo/seeds.exs</code> - Seeds the Northwind sample data</li>
                      <li>â€¢ <code>npm install</code> - Installs JavaScript dependencies</li>
                    </ul>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Verify the Setup
                </h3>
                <p class="text-base-content/70 mb-3">Start the Phoenix server to ensure everything is working:</p>
                <div class="relative">
                  <div class="mockup-code mb-4">
                    <pre data-prefix="$"><code class="text-green-400">mix phx.server</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'mix phx.server')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
                <p class="text-base-content/70">Visit <a href="http://localhost:4000" class="link link-primary">http://localhost:4000</a> and you should see the Northwind Demo landing page with navigation links to Customers, Catalog, Orders, and Analytics sections.</p>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4" />
                  </svg>
                  Check Database Connection
                </h3>
                <p class="text-base-content/70 mb-3">Verify the database is properly seeded with data:</p>
                <div class="mockup-code">
                  <pre data-prefix="$"><code>iex -S mix</code></pre>
                  <pre data-prefix="#"><code># In the IEx console:</code></pre>
                  <pre data-prefix=">"><code>alias SelectoNorthwind.Repo</code></pre>
                  <pre data-prefix=">"><code>import Ecto.Query</code></pre>
                  <pre data-prefix="#"><code># Check for data in the tables</code></pre>
                  <pre data-prefix=">"><code>Repo.aggregate(from(p in "products"), :count)</code></pre>
                  <pre data-prefix="#"><code># Should return 77 (or similar number of products)</code></pre>
                  <pre data-prefix=">"><code>Repo.aggregate(from(c in "customers"), :count)</code></pre>
                  <pre data-prefix="#"><code># Should return 91 (or similar number of customers)</code></pre>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                  </svg>
                  Development Commands Reference
                </h3>
                <p class="text-base-content/70 mb-3">Common commands you'll use during development:</p>
                <div class="mockup-code">
                  <pre data-prefix="#"><code># Start Phoenix server</code></pre>
                  <pre data-prefix="$"><code>mix phx.server</code></pre>
                  <pre data-prefix="#"><code># Start server with interactive Elixir shell</code></pre>
                  <pre data-prefix="$"><code>iex -S mix phx.server</code></pre>
                  <pre data-prefix="#"><code># Run tests</code></pre>
                  <pre data-prefix="$"><code>mix test</code></pre>
                  <pre data-prefix="#"><code># Run precommit checks</code></pre>
                  <pre data-prefix="$"><code>mix precommit</code></pre>
                  <pre data-prefix="#"><code># Reset database (drop, create, migrate, seed)</code></pre>
                  <pre data-prefix="$"><code>mix ecto.reset</code></pre>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                  Next Step
                </h3>
                <p class="text-base-content/70">With the basic Phoenix application set up and the Northwind database loaded, you're ready to proceed to Step 1 where we'll add the Selecto dependencies.</p>
              </div>
            </div>
          </div>
        </div>

        <!-- Step 1 Expanded -->
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <div class="flex items-center gap-4 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-accent to-accent-focus rounded-xl flex items-center justify-center text-white font-bold text-lg">1</div>
              <div>
                <h2 class="card-title text-2xl">Add Selecto Dependencies</h2>
                <p class="text-base-content/70">Configure your Phoenix project with Selecto libraries</p>
              </div>
            </div>
            <p class="text-base-content/80 mb-6">The first step is to add the Selecto libraries to your Phoenix project. These libraries provide powerful data selection, filtering, and UI components for your application.</p>
            
            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                  Add Dependencies to mix.exs
                </h3>
                <p class="text-base-content/70 mb-3">Open your <code class="bg-base-300 px-2 py-1 rounded text-sm">mix.exs</code> file and add the following dependencies to the <code class="bg-base-300 px-2 py-1 rounded text-sm">deps</code> function:</p>
                <div class="relative">
                  <div class="mockup-code">
<pre><code><span class="text-purple-400">defp</span> <span class="text-blue-300">deps</span> <span class="text-purple-400">do</span>
  [
    <span class="text-gray-400"># ... existing dependencies ...</span>

    <span class="text-gray-400"># Selecto libraries</span>
      <%= "{" %><span class="text-green-400">:selecto</span>, <span class="text-orange-300">path</span>: <span class="text-yellow-300">"./vendor/selecto"</span><%= "}" %>,
      <%= "{" %><span class="text-green-400">:selecto_components</span>, <span class="text-orange-300">path</span>: <span class="text-yellow-300">"./vendor/selecto_components"</span><%= "}" %>,
      <%= "{" %><span class="text-green-400">:selecto_mix</span>, <span class="text-orange-300">path:</span> <span class="text-yellow-300">"./vendor/selecto_mix"</span>, <span class="text-orange-300">only:</span> [<span class="text-green-400">:dev</span>, <span class="text-green-400">:test</span>]<%= "}" %>
  ]
<span class="text-purple-400">end</span></code></pre>
                  </div>
                  <button
                    onclick="copyCode(this, `defp deps do
  [
    # ... existing dependencies ...

    # Selecto libraries
    {:selecto, path: './vendor/selecto'},
    {:selecto_components, path: './vendor/selecto_components'},
    {:selecto_mix, path: './vendor/selecto_mix', only: [:dev, :test]}
  ]
end`)"
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
                
                <div class="alert alert-warning mt-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> These dependencies are referenced as local paths because they are included as git submodules in the vendor directory. In a production environment, you would typically reference them from Hex or GitHub.
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  What Each Library Does
                </h3>
                <div class="grid gap-4">
                  <div class="flex items-start gap-3 p-4 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-primary rounded-full mt-2"></div>
                    <div>
                      <strong><code class="bg-base-300 px-2 py-1 rounded text-sm">selecto</code></strong>: Core library providing the query builder and data selection engine
                    </div>
                  </div>
                  <div class="flex items-start gap-3 p-4 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-primary rounded-full mt-2"></div>
                    <div>
                      <strong><code class="bg-base-300 px-2 py-1 rounded text-sm">selecto_components</code></strong>: Pre-built Phoenix LiveView components for data tables, filters, and visualizations
                    </div>
                  </div>
                  <div class="flex items-start gap-3 p-4 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-primary rounded-full mt-2"></div>
                    <div>
                      <strong><code class="bg-base-300 px-2 py-1 rounded text-sm">selecto_mix</code></strong>: Mix tasks and generators for scaffolding Selecto-based views and components (development only)
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                  </svg>
                  Install Dependencies
                </h3>
                <p class="text-base-content/70 mb-3">After adding the dependencies, fetch and compile them:</p>
                <div class="relative">
                  <div class="mockup-code">
                    <pre data-prefix="$"><code class="text-green-400">mix deps.get</code></pre>
                    <pre data-prefix="$"><code class="text-green-400">mix deps.compile</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'mix deps.get\nmix deps.compile')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Verify Installation
                </h3>
                <p class="text-base-content/70 mb-3">You can verify that the Selecto libraries are properly installed by running:</p>
                <div class="relative">
                  <div class="mockup-code">
                    <pre data-prefix="$"><code class="text-green-400">mix help | grep selecto</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'mix help | grep selecto')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
                <div class="alert alert-success">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">You should see several new Mix tasks available, including:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>â€¢ <code>mix selecto.gen.live</code> - Generate a LiveView with Selecto components</li>
                      <li>â€¢ <code>mix selecto.gen.domain</code> - Generate a domain configuration</li>
                      <li>â€¢ <code>mix selecto.gen.dashboard</code> - Generate a dashboard view</li>
                    </ul>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                  Next Step
                </h3>
                <p class="text-base-content/70">With the dependencies installed, you're ready to move on to Step 2, where we'll generate our first Selecto-powered view for the Customers table.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <div class="flex items-center gap-4 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-success to-success-focus rounded-xl flex items-center justify-center text-white font-bold text-lg">2</div>
              <div>
                <h2 class="card-title text-2xl">Generate Products Domain with Selecto</h2>
                <p class="text-base-content/70">Create your first Selecto-powered interface</p>
              </div>
            </div>
            <p class="text-base-content/80 mb-6">In this step, we'll use the <code class="bg-base-300 px-2 py-1 rounded text-sm">mix selecto.gen.domain</code> task to generate Selecto domain configuration for the Product schema and its related schemas (Categories and Suppliers) from the Catalog context.</p>
            
            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3">Understanding Selecto Domains</h3>
                <p class="text-base-content/70">Selecto domains provide a configuration layer on top of your existing Ecto schemas. They define how tables relate to each other, what fields to display, and how to query the data efficiently.</p>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3">Generate the Products Domain</h3>
                <p class="text-base-content/70 mb-3">Run the following Mix task:</p>
                <div class="relative">
                  <div class="mockup-code mb-4">
                    <pre data-prefix="$"><code class="text-green-400">mix selecto.gen.domain SelectoNorthwind.Catalog.Product \</code></pre>
                    <pre data-prefix=""><code class="text-blue-300">  --expand-schemas SelectoNorthwind.Catalog.Category SelectoNorthwind.Catalog.Supplier \</code></pre>
                    <pre data-prefix=""><code class="text-blue-300">  --live --saved-views --path products_selecto</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'mix selecto.gen.domain SelectoNorthwind.Catalog.Product --expand-schemas SelectoNorthwind.Catalog.Category SelectoNorthwind.Catalog.Supplier --live --saved-views --path products_selecto')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
                <div class="alert alert-info mb-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> The <code>--path</code> option allows you to specify a custom route path. Here we use <code>products_selecto</code> to avoid conflicts with existing routes.
                  </div>
                </div>
                <p class="text-base-content/70">When prompted about uncommitted changes and SelectoComponents integration, answer "Y" to proceed.</p>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3">What This Command Does</h3>
                <div class="grid gap-3">
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">1</div>
                    <div><strong>Analyze your existing Ecto schema</strong> for Product and the expanded schemas (Category, Supplier)</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">2</div>
                    <div><strong>Generate a Selecto domain configuration</strong> that maps these schemas and their relationships</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">3</div>
                    <div><strong>Create LiveView modules</strong> for interactive data exploration (with <code>--live</code>)</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">4</div>
                    <div><strong>Generate saved views infrastructure</strong> for persisting user-defined views (with <code>--saved-views</code>)</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">5</div>
                    <div><strong>Integrate SelectoComponents assets</strong> (Chart.js, Alpine.js, hooks, and styles)</div>
                  </div>
                </div>
              </div>

              <!-- Continue with the remaining content... -->
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  Configure SavedView Support
                </h3>
                <p class="text-base-content/70 mb-4">There are two parts to enabling saved views:</p>
                
                <div class="space-y-6">
                  <div>
                    <h4 class="font-semibold mb-3 text-base-content flex items-center gap-2">
                      <span class="w-6 h-6 bg-primary text-primary-content rounded-full flex items-center justify-center text-sm font-bold">1</span>
                      Add SavedView Support to Domain
                    </h4>
                    <p class="text-base-content/70 mb-3">The generated domain module needs to use the SavedViewContext. Add this line to <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind/selecto_domains/products_domain.ex</code>:</p>
                    <div class="relative">
                      <div class="mockup-code">
<pre><code><span class="text-purple-400">defmodule</span> <span class="text-blue-300">SelectoNorthwind.SelectoDomains.ProductsDomain</span> <span class="text-purple-400">do</span>
  <span class="text-purple-400">use</span> <span class="text-blue-300">SelectoNorthwind.SavedViewContext</span>  <span class="text-gray-400"># Add this line</span>

  <span class="text-gray-400"># ... rest of the domain configuration</span>
<span class="text-purple-400">end</span></code></pre>
                      </div>
                      <button
                        onclick="copyCode(this, `defmodule SelectoNorthwind.SelectoDomains.ProductsDomain do
  use SelectoNorthwind.SavedViewContext  # Add this line

  # ... rest of the domain configuration
end`)"
                        class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                      >
                        ðŸ“‹ Copy
                      </button>
                    </div>
                  </div>
                  
                  <div>
                    <h4 class="font-semibold mb-3 text-base-content flex items-center gap-2">
                      <span class="w-6 h-6 bg-primary text-primary-content rounded-full flex items-center justify-center text-sm font-bold">2</span>
                      Set saved_view_context in LiveView
                    </h4>
                    <p class="text-base-content/70 mb-3">The generated LiveView (with <code class="bg-base-300 px-2 py-1 rounded text-sm">--saved-views</code> flag) automatically sets up the saved view context in the mount function. This looks like:</p>
                    <div class="relative">
                      <div class="mockup-code">
<pre><code><span class="text-gray-400"># In lib/selecto_northwind_web/live/product_live.ex</span>
<span class="text-purple-400">def</span> <span class="text-blue-300">mount</span>(<span class="text-orange-300">_params</span>, <span class="text-orange-300">_session</span>, <span class="text-orange-300">socket</span>) <span class="text-purple-400">do</span>
  <span class="text-gray-400"># ... other setup code ...</span>

  <span class="text-orange-300">socket</span> <span class="text-red-400">=</span>
    <span class="text-blue-300">assign</span>(<span class="text-orange-300">socket</span>,
      <span class="text-gray-400"># ... other assigns ...</span>
      <span class="text-green-400">saved_view_module:</span> <span class="text-blue-300">SelectoNorthwind.SelectoDomains.ProductsDomain</span>,
      <span class="text-green-400">saved_view_context:</span> <span class="text-yellow-300">"/products_selecto"</span>,  <span class="text-gray-400"># Identifies this set of saved views</span>
      <span class="text-green-400">available_saved_views:</span> <span class="text-orange-300">saved_views</span>
    )

  <%= "{" %><span class="text-green-400">:ok</span>, <span class="text-orange-300">socket</span><%= "}" %>
<span class="text-purple-400">end</span></code></pre>
                      </div>
                      <button
                        onclick="copyCode(this, `# In lib/selecto_northwind_web/live/product_live.ex
def mount(_params, _session, socket) do
  # ... other setup code ...

  socket =
    assign(socket,
      # ... other assigns ...
      saved_view_module: SelectoNorthwind.SelectoDomains.ProductsDomain,
      saved_view_context: '/products_selecto',  # Identifies this set of saved views
      available_saved_views: saved_views
    )

  {:ok, socket}
end`)"
                        class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                      >
                        ðŸ“‹ Copy
                      </button>
                    </div>
                    <div class="alert alert-info mt-3">
                      <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                      <div>
                        The <code>saved_view_context</code> assign is crucial - it identifies which saved views belong to this LiveView. Typically set to the path or a unique identifier for the domain.
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4" />
                  </svg>
                  Run the Migration
                </h3>
                <p class="text-base-content/70 mb-3">After generation, run the migration to create the saved_views table:</p>
                <div class="relative">
                  <div class="mockup-code">
                    <pre data-prefix="$"><code class="text-green-400">mix ecto.migrate</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'mix ecto.migrate')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-7-7 7-7m5 14l7-7-7-7" />
                  </svg>
                  Add Route to Router
                </h3>
                <p class="text-base-content/70 mb-3">Add the generated LiveView route to your <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind_web/router.ex</code>. This will replace the existing placeholder route:</p>
                <div class="relative">
                  <div class="mockup-code mb-3">
<pre><code><span class="text-purple-400">scope</span> <span class="text-yellow-300">"/"</span>, <span class="text-blue-300">SelectoNorthwindWeb</span> <span class="text-purple-400">do</span>
  <span class="text-blue-300">pipe_through</span> <span class="text-green-400">:browser</span>

  <span class="text-gray-400"># Replace this placeholder:</span>
  <span class="text-gray-400"># get "/products_selecto", PageController, :products_selecto</span>
  
  <span class="text-gray-400"># With this LiveView route:</span>
  <span class="text-blue-300">live</span> <span class="text-yellow-300">"/products_selecto"</span>, <span class="text-blue-300">ProductLive</span>, <span class="text-green-400">:index</span>
<span class="text-purple-400">end</span></code></pre>
                  </div>
                  <button
                    onclick="copyCode(this, `scope '/', SelectoNorthwindWeb do
  pipe_through :browser

  # Replace this placeholder:
  # get '/products_selecto', PageController, :products_selecto

  # With this LiveView route:
  live '/products_selecto', ProductLive, :index
end`)"
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
                <div class="alert alert-warning">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> This replaces the existing placeholder route <code>get "/products_selecto", PageController, :products_selecto</code> with the actual LiveView route. The route path matches what we specified with the <code>--path</code> option, and the module name is <code>ProductLive</code> (singular).
                  </div>
                </div>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  Build Assets
                </h3>
                <p class="text-base-content/70 mb-3">Compile the updated assets with the new SelectoComponents integration:</p>
                <div class="relative">
                  <div class="mockup-code">
                    <pre data-prefix="$"><code class="text-green-400">mix assets.build</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'mix assets.build')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Verify the Setup
                </h3>
                <p class="text-base-content/70 mb-3">Start your Phoenix server and navigate to <code class="bg-base-300 px-2 py-1 rounded text-sm">/products_selecto</code>:</p>
                <div class="relative">
                  <div class="mockup-code mb-4">
                    <pre data-prefix="$"><code class="text-green-400">mix phx.server</code></pre>
                  </div>
                  <button 
                    onclick="copyCode(this, 'mix phx.server')" 
                    class="absolute top-2 right-2 btn btn-xs btn-primary text-white shadow-lg hover:btn-primary-focus"
                  >
                    ðŸ“‹ Copy
                  </button>
                </div>
                <div class="alert alert-success">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">You should see the Products Explorer interface with:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>â€¢ A query builder form</li>
                      <li>â€¢ Data results in table format</li>
                      <li>â€¢ Options to switch between Table, Detail, and Graph views</li>
                      <li>â€¢ Ability to save and load custom views</li>
                    </ul>
                  </div>
                </div>
              </div>
              <div class="collapse collapse-arrow bg-base-200">
                <input type="checkbox" />
                <div class="collapse-title font-medium">
                  Click to see detailed file generation information
                </div>
                <div class="collapse-content">
                  <div class="space-y-4 text-sm">
                    <div>
                      <h4 class="font-semibold mb-2">Selecto Domain Configuration</h4>
                      <div class="mockup-code text-xs">
                        <pre><code>lib/selecto_northwind/selecto_domains/
  â””â”€â”€ products_domain.ex  # Domain configuration with Product and related schemas</code></pre>
                      </div>
                      <p class="text-base-content/70 mt-2">This file contains configurations for the Product schema and expanded schemas (Category, Supplier) defining: column definitions, association mappings, default display settings, and query configurations.</p>
                    </div>
                    
                    <div>
                      <h4 class="font-semibold mb-2">LiveView Files (with --live flag)</h4>
                      <div class="mockup-code text-xs">
                        <pre><code>lib/selecto_northwind_web/live/
  â”œâ”€â”€ products_live.ex        # Main LiveView module
  â””â”€â”€ products_live.html.heex  # LiveView template</code></pre>
                      </div>
                    </div>
                    
                    <div>
                      <h4 class="font-semibold mb-2">Saved Views Infrastructure (with --saved-views flag)</h4>
                      <div class="mockup-code text-xs">
                        <pre><code>lib/selecto_northwind/
  â”œâ”€â”€ saved_view.ex           # Ecto schema for saved views
  â””â”€â”€ saved_view_context.ex   # Context module for saved view operations

priv/repo/migrations/
  â””â”€â”€ [timestamp]_create_saved_views.exs  # Database migration</code></pre>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Foundation steps message -->
        <div class="card bg-info/10 border border-info/20 shadow-lg">
          <div class="card-body">
            <h2 class="card-title text-info mb-4">
              <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
              </svg>
              Foundation Steps Complete - Ready for More
            </h2>
            <p class="text-base-content/80 mb-4">You've completed the foundation steps of the Selecto integration tutorial! This gives you the basic setup and first domain. The tutorial will expand with additional steps covering more advanced features and additional domains.</p>
            
            <div class="grid md:grid-cols-2 gap-4">
              <div class="p-4 bg-base-100 rounded-lg border">
                <h4 class="font-semibold mb-2">Foundation Complete:</h4>
                <ul class="text-sm space-y-1 text-base-content/70">
                  <li>â€¢ Set up the Phoenix application with Northwind database</li>
                  <li>â€¢ Added Selecto dependencies to your project</li>
                  <li>â€¢ Generated a Products domain with LiveView integration</li>
                  <li>â€¢ Configured saved views infrastructure</li>
                </ul>
              </div>
              
              <div class="p-4 bg-base-100 rounded-lg border">
                <h4 class="font-semibold mb-2">Coming Soon - Additional Steps:</h4>
                <ul class="text-sm space-y-1 text-base-content/70">
                  <li>â€¢ Step 3: Generate Customers Domain</li>
                  <li>â€¢ Step 4: Generate Orders Domain with Relations</li>
                  <li>â€¢ Step 5: Advanced Filtering and Search</li>
                  <li>â€¢ Step 6: Custom Visualizations and Dashboards</li>
                  <li>â€¢ Step 7: Advanced Saved Views and Sharing</li>
                </ul>
              </div>
            </div>
            
            <div class="mt-4 p-4 bg-base-200 rounded-lg">
              <p class="text-sm text-base-content/70 text-center">
                <svg class="w-4 h-4 inline mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                This tutorial will be expanded with additional steps. For now, explore the generated Products interface and experiment with the Selecto features!
              </p>
            </div>
          </div>
        </div>

        <!-- Navigation -->
        <div class="mt-12 flex justify-between items-center">
          <a href="/" class="btn btn-outline gap-2">
            <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            Back to Home
          </a>
          <div class="text-sm text-base-content/60">
            More tutorial steps coming soon - explore the generated features in the meantime!
          </div>
        </div>
      </div>
    </div>
  </div>
</div>