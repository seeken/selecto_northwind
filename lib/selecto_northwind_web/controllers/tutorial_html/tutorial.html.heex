<Layouts.flash_group flash={@flash} />

<!-- Prism.js for syntax highlighting -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-elixir.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-bash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/toolbar/prism-toolbar.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/toolbar/prism-toolbar.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js"></script>

<div class="min-h-screen bg-gradient-to-br from-base-100 to-base-200">
  <!-- Fixed Navigation Sidebar -->
  <div class="fixed left-0 top-20 h-full w-64 bg-base-100 border-r border-base-300 overflow-y-auto z-10 hidden lg:block">
    <div class="p-6">
      <h3 class="text-lg font-bold mb-4 text-base-content">Tutorial Navigation</h3>
      <nav class="space-y-2">
        <a href="#step-0" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-primary">Step 0:</span>
          <span class="text-base-content/70 block">Set Up Phoenix Project</span>
        </a>
        <a href="#step-1" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-accent">Step 1:</span>
          <span class="text-base-content/70 block">Add Selecto Dependencies</span>
        </a>
        <a href="#step-2" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-success">Step 2:</span>
          <span class="text-base-content/70 block">Generate Products Domain</span>
        </a>
        <a href="#step-3" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-secondary">Step 3:</span>
          <span class="text-base-content/70 block">Generate Customers Domain</span>
        </a>
        <a href="#step-4" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-warning">Step 4:</span>
          <span class="text-base-content/70 block">Generate Orders Domain</span>
        </a>
        <a href="#step-5" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-info">Step 5:</span>
          <span class="text-base-content/70 block">Generate Employees Domain</span>
        </a>
        <div class="divider my-4"></div>
        <a href="#complete" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold">🎉 Complete System</span>
        </a>
        <div class="divider my-4"></div>
        <a href="/" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <svg class="w-4 h-4 inline mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back to Home
        </a>
      </nav>
    </div>
  </div>

  <!-- Main Content Area -->
  <div>
    <!-- Header Section -->
    <div class="bg-primary text-primary-content">
      <div class="py-12">
        <div class="mx-auto">
        <div class="flex items-center gap-4 mb-6">
          <div class="p-3 bg-primary-content/10 rounded-xl">
            <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25A8.966 8.966 0 0118 3.75c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0118 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" />
            </svg>
          </div>
          <div>
            <h1 class="text-4xl font-bold mb-2">Selecto Integration Tutorial</h1>
            <p class="text-xl text-primary-content/80">Step-by-step guide to integrate Selecto libraries with Phoenix</p>
          </div>
        </div>
        
        <div class="flex flex-wrap gap-3">
          <div class="badge badge-outline badge-lg text-primary-content border-primary-content/30">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
            </svg>
            Phoenix LiveView
          </div>
          <div class="badge badge-outline badge-lg text-primary-content border-primary-content/30">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4" />
            </svg>
            Elixir & Ecto
          </div>
          <div class="badge badge-outline badge-lg text-primary-content border-primary-content/30">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            </svg>
            Data Visualization
          </div>
        </div>
      </div>
    </div>
  </div>

    <!-- Content Section -->
    <div class="py-12">
      <div class="mx-auto">
      <!-- Navigation breadcrumb -->
      <div class="breadcrumbs text-sm mb-8">
        <ul>
          <li><a href="/" class="text-primary hover:text-primary-focus">Home</a></li>
          <li class="text-base-content/60">Tutorial</li>
        </ul>
      </div>

      <!-- Tutorial Content -->
      <div class="space-y-8">
        
        <!-- Initialize Prism.js after page loads and handle navigation -->
        <script>
          // Ensure Prism highlights after LiveView updates
          document.addEventListener('DOMContentLoaded', function() {
            if (typeof Prism !== 'undefined') {
              Prism.highlightAll();
            }

            // Smooth scrolling for navigation links
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
              anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                  target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                  });
                }
              });
            });

            // Highlight active section in navigation
            const observerOptions = {
              root: null,
              rootMargin: '0px 0px -50% 0px',
              threshold: 0
            };

            const observer = new IntersectionObserver((entries) => {
              entries.forEach(entry => {
                if (entry.isIntersecting) {
                  // Remove all active classes
                  document.querySelectorAll('a[href^="#"]').forEach(link => {
                    link.classList.remove('bg-base-200');
                  });
                  // Add active class to current section link
                  const activeLink = document.querySelector(`a[href="#${entry.target.id}"]`);
                  if (activeLink) {
                    activeLink.classList.add('bg-base-200');
                  }
                }
              });
            }, observerOptions);

            // Observe all sections with IDs
            document.querySelectorAll('[id^="step-"], #complete').forEach(section => {
              observer.observe(section);
            });
          });
        </script>
        <!-- Tutorial Structure Card -->
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title text-2xl mb-4">
              <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
              Tutorial Structure
            </h2>
            <p class="text-base-content/80 mb-4">This tutorial is organized into steps, with each step building upon the previous one. You can:</p>
            <div class="grid gap-3">
              <div class="flex items-center gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-2 h-2 bg-primary rounded-full"></div>
                <span>Follow along from the beginning by checking out the <code class="bg-base-300 px-2 py-1 rounded text-sm">main</code> branch</span>
              </div>
              <div class="flex items-center gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-2 h-2 bg-primary rounded-full"></div>
                <span>Jump to any step by checking out <code class="bg-base-300 px-2 py-1 rounded text-sm">tutorial-step-N</code> (where N is the step number)</span>
              </div>
              <div class="flex items-center gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-2 h-2 bg-primary rounded-full"></div>
                <span>Compare your work with the reference implementation by diffing against the step branches</span>
              </div>
            </div>
          </div>
        </div>



        <!-- Step 0 -->
        <div id="step-0" class="card bg-base-100 shadow-xl scroll-mt-6">
          <div class="card-body">
            <div class="flex items-center gap-4 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-primary to-secondary rounded-xl flex items-center justify-center text-white font-bold text-lg">0</div>
              <div>
                <h2 class="card-title text-2xl">Set Up the Basic Phoenix Project</h2>
                <p class="text-base-content/70">Initialize your development environment</p>
              </div>
            </div>
            <p class="text-base-content/80 mb-6">Before integrating Selecto, you need to set up the basic Phoenix application with the Northwind database. This step ensures you have a working Phoenix app with the database schema and sample data loaded.</p>
            
            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                  </svg>
                  Clone the Repository
                </h3>
                <div class="relative">
                  <pre><code class="language-bash">$ git clone &lt;repository-url&gt;
$ cd selecto_northwind</code></pre>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10" />
                  </svg>
                  Initialize Git Submodules
                </h3>
                <p class="text-base-content/70 mb-3">The project includes Selecto libraries as git submodules in the vendor directory:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ git submodule update --init --recursive</code></pre>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                  </svg>
                  Install Dependencies
                </h3>
                <p class="text-base-content/70 mb-3">Install all Phoenix and Elixir dependencies:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix setup</code></pre>
                </div>
                <div class="alert alert-info">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">This command runs:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>• <code>mix deps.get</code> - Fetches all dependencies</li>
                      <li>• <code>mix ecto.create</code> - Creates the database</li>
                      <li>• <code>mix ecto.migrate</code> - Runs database migrations</li>
                      <li>• <code>mix run priv/repo/seeds.exs</code> - Seeds the Northwind sample data</li>
                      <li>• <code>npm install</code> - Installs JavaScript dependencies</li>
                    </ul>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Verify the Setup
                </h3>
                <p class="text-base-content/70 mb-3">Start the Phoenix server to ensure everything is working:</p>
                <div class="relative">
                  <pre class="mb-4"><code class="language-bash">$ mix phx.server</code></pre>
                </div>
                <p class="text-base-content/70">Visit <a href="http://localhost:4000" class="link link-primary">http://localhost:4000</a> and you should see the Northwind Demo landing page with navigation links to Customers, Catalog, Orders, and Analytics sections.</p>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4" />
                  </svg>
                  Check Database Connection
                </h3>
                <p class="text-base-content/70 mb-3">Verify the database is properly seeded with data:</p>
                <pre><code class="language-elixir">$ iex -S mix
# In the IEx console:
iex> alias SelectoNorthwind.Repo
iex> import Ecto.Query
# Check for data in the tables
iex> Repo.aggregate(from(p in "products"), :count)
# Should return 77 (or similar number of products)
iex> Repo.aggregate(from(c in "customers"), :count)
# Should return 91 (or similar number of customers)</code></pre>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                  </svg>
                  Development Commands Reference
                </h3>
                <p class="text-base-content/70 mb-3">Common commands you'll use during development:</p>
                <pre><code class="language-bash"># Start Phoenix server
$ mix phx.server
# Start server with interactive Elixir shell
$ iex -S mix phx.server
# Run tests
$ mix test
# Run precommit checks
$ mix precommit
# Reset database (drop, create, migrate, seed)
$ mix ecto.reset</code></pre>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                  Next Step
                </h3>
                <p class="text-base-content/70">With the basic Phoenix application set up and the Northwind database loaded, you're ready to proceed to Step 1 where we'll add the Selecto dependencies.</p>
              </div>
            </div>
          </div>
        </div>

        <!-- Step 1 Expanded -->
        <div id="step-1" class="card bg-base-100 shadow-xl scroll-mt-6">
          <div class="card-body">
            <div class="flex items-center gap-4 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-accent to-accent-focus rounded-xl flex items-center justify-center text-white font-bold text-lg">1</div>
              <div>
                <h2 class="card-title text-2xl">Add Selecto Dependencies</h2>
                <p class="text-base-content/70">Configure your Phoenix project with Selecto libraries</p>
              </div>
            </div>
            <p class="text-base-content/80 mb-6">The first step is to add the Selecto libraries to your Phoenix project. These libraries provide powerful data selection, filtering, and UI components for your application.</p>
            
            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                  Add Dependencies to mix.exs
                </h3>
                <p class="text-base-content/70 mb-3">Open your <code class="bg-base-300 px-2 py-1 rounded text-sm">mix.exs</code> file and add the following dependencies to the <code class="bg-base-300 px-2 py-1 rounded text-sm">deps</code> function:</p>
                <div class="relative">
                  <pre><code class="language-elixir">defp deps do
  [
    # ... existing dependencies ...

    # Selecto libraries
    <%= "{" %>:selecto, path: "./vendor/selecto"<%= "}" %>,
    <%= "{" %>:selecto_components, path: "./vendor/selecto_components"<%= "}" %>,
    <%= "{" %>:selecto_mix, path: "./vendor/selecto_mix", only: [:dev, :test]<%= "}" %>
  ]
end</code></pre>
                </div>
                
                <div class="alert alert-warning mt-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> These dependencies are referenced as local paths because they are included as git submodules in the vendor directory. In a production environment, you would typically reference them from Hex or GitHub.
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  What Each Library Does
                </h3>
                <div class="grid gap-4">
                  <div class="flex items-start gap-3 p-4 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-primary rounded-full mt-2"></div>
                    <div>
                      <strong><code class="bg-base-300 px-2 py-1 rounded text-sm">selecto</code></strong>: Core library providing the query builder and data selection engine
                    </div>
                  </div>
                  <div class="flex items-start gap-3 p-4 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-primary rounded-full mt-2"></div>
                    <div>
                      <strong><code class="bg-base-300 px-2 py-1 rounded text-sm">selecto_components</code></strong>: Pre-built Phoenix LiveView components for data tables, filters, and visualizations
                    </div>
                  </div>
                  <div class="flex items-start gap-3 p-4 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-primary rounded-full mt-2"></div>
                    <div>
                      <strong><code class="bg-base-300 px-2 py-1 rounded text-sm">selecto_mix</code></strong>: Mix tasks and generators for scaffolding Selecto-based views and components (development only)
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                  </svg>
                  Install Dependencies
                </h3>
                <p class="text-base-content/70 mb-3">After adding the dependencies, fetch and compile them:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix deps.get
$ mix deps.compile</code></pre>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  Integrate SelectoComponents Assets
                </h3>
                <p class="text-base-content/70 mb-3">Run the integration task to set up the required JavaScript and CSS assets:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix selecto.integrate.components</code></pre>
                </div>
                <div class="alert alert-info mt-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">This command will:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>• Add SelectoComponents hooks to <code class="bg-base-300 px-1 rounded">assets/js/app.js</code></li>
                      <li>• Add SelectoComponents styles import to <code class="bg-base-300 px-1 rounded">assets/css/app.css</code></li>
                      <li>• Ensure Chart.js and Alpine.js dependencies are configured in <code class="bg-base-300 px-1 rounded">assets/package.json</code></li>
                    </ul>
                  </div>
                </div>
                <p class="text-base-content/70 mt-4 mb-3">After running the integration task, build the assets:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix assets.build</code></pre>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Verify Installation
                </h3>
                <p class="text-base-content/70 mb-3">You can verify that the Selecto libraries are properly installed by running:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix help | grep selecto</code></pre>
                </div>
                <div class="alert alert-success">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">You should see several new Mix tasks available, including:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>• <code>mix selecto.gen.live</code> - Generate a LiveView with Selecto components</li>
                      <li>• <code>mix selecto.gen.domain</code> - Generate a domain configuration</li>
                      <li>• <code>mix selecto.gen.dashboard</code> - Generate a dashboard view</li>
                      <li>• <code>mix selecto.integrate.components</code> - Integrate SelectoComponents assets</li>
                    </ul>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                  Next Step
                </h3>
                <div class="alert alert-warning mb-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"></path>
                  </svg>
                  <div>
                    <strong>⚠️ Important for AI Agents:</strong> After adding dependencies, you <strong>MUST restart the Phoenix server</strong> to ensure proper compilation of the new Selecto libraries. The server needs to be restarted when dependencies are added.
                  </div>
                </div>
                <p class="text-base-content/70">With the dependencies installed and assets integrated, you're ready to move on to Step 2, where we'll generate our first Selecto-powered view for the Products table.</p>
              </div>
            </div>
          </div>
        </div>

        <div id="step-2" class="card bg-base-100 shadow-xl scroll-mt-6">
          <div class="card-body">
            <div class="flex items-center gap-4 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-success to-success-focus rounded-xl flex items-center justify-center text-white font-bold text-lg">2</div>
              <div>
                <h2 class="card-title text-2xl">Generate Products Domain with Selecto</h2>
                <p class="text-base-content/70">Create your first Selecto-powered interface</p>
              </div>
            </div>
            <p class="text-base-content/80 mb-6">In this step, we'll use the <code class="bg-base-300 px-2 py-1 rounded text-sm">mix selecto.gen.domain</code> task to generate Selecto domain configuration for the Product schema and its related schemas (Categories, Suppliers, and Tags) from the Catalog context.</p>

            <div class="alert alert-success mb-6">
              <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <div>
                <strong>🏷️ New: Product Tagging</strong> - The Northwind database now includes a many-to-many tagging system for products! Tags like "Organic", "Kosher", "Gluten-Free", "Vegan", and more are available to filter and categorize products.
              </div>
            </div>
            
            <div class="alert alert-info mb-6">
              <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <div>
                <strong>💡 For AI Agents:</strong> This step requires server restarts at specific points to ensure proper asset compilation and Tailwind CSS scanning. Pay attention to the restart warnings throughout this step.
              </div>
            </div>
            
            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3">Understanding Selecto Domains</h3>
                <p class="text-base-content/70">Selecto domains provide a configuration layer on top of your existing Ecto schemas. They define how tables relate to each other, what fields to display, and how to query the data efficiently.</p>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3">Generate the Products Domain</h3>
                <p class="text-base-content/70 mb-3">Run the following Mix task to include Categories, Suppliers, and Tags with saved views support:</p>
                <div class="relative">
                  <pre class="mb-4"><code class="language-bash">$ mix selecto.gen.saved_views SelectoNorthwind  # Generate saved views first
$ mix selecto.gen.domain SelectoNorthwind.Catalog.Product \
  --expand-schemas SelectoNorthwind.Catalog.Category,SelectoNorthwind.Catalog.Supplier,SelectoNorthwind.Catalog.Tag \
  --live --saved-views --path products_selecto</code></pre>
                </div>
                
                <div class="collapse collapse-arrow bg-yellow-50 border border-yellow-200">
                  <input type="checkbox" />
                  <div class="collapse-title text-sm font-medium text-yellow-800">
                    🤖 AI Agent Notes - Click to expand
                  </div>
                  <div class="collapse-content text-sm text-yellow-700">
                    <p>This command requires interactive responses to two prompts. For automated execution, pipe in two Y responses:</p>
                    <code class="bg-yellow-100 px-2 py-1 rounded text-xs">echo -e "Y\nY" |</code> before the command above.
                  </div>
                </div>
                
                <div class="alert alert-info mb-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> The <code>--path</code> option allows you to specify a custom route path. Here we use <code>products_selecto</code> to avoid conflicts with existing routes.
                  </div>
                </div>
                
                <p class="text-base-content/70">The command will ask you two questions:</p>
                <ol class="list-decimal list-inside text-sm text-base-content/70 ml-4 space-y-1">
                  <li>About proceeding with uncommitted changes (answer <code class="bg-base-300 px-1 rounded">Y</code>)</li>
                  <li>About SelectoComponents integration (answer <code class="bg-base-300 px-1 rounded">Y</code>)</li>
                </ol>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3">What This Command Does</h3>
                <div class="grid gap-3">
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">1</div>
                    <div><strong>Analyze your existing Ecto schema</strong> for Product and the expanded schemas (Category, Supplier)</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">2</div>
                    <div><strong>Generate a Selecto domain configuration</strong> that maps these schemas and their relationships</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">3</div>
                    <div><strong>Create LiveView modules</strong> for interactive data exploration (with <code>--live</code>)</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">4</div>
                    <div><strong>Generate saved views infrastructure</strong> for persisting user-defined views (with <code>--saved-views</code>)</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">5</div>
                    <div><strong>Integrate SelectoComponents assets</strong> (Chart.js, Alpine.js, hooks, and styles)</div>
                  </div>
                </div>
              </div>

              <!-- Continue with the remaining content... -->
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  Configure SavedView Support
                </h3>
                <p class="text-base-content/70 mb-4">There are two parts to enabling saved views:</p>
                
                <div class="space-y-6">
                  <div>
                    <h4 class="font-semibold mb-3 text-base-content flex items-center gap-2">
                      <span class="w-6 h-6 bg-primary text-primary-content rounded-full flex items-center justify-center text-sm font-bold">1</span>
                      Add SavedView Support to Domain
                    </h4>
                    <p class="text-base-content/70 mb-3">The generated domain module needs to use the SavedViewContext. Add this line to <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind/selecto_domains/products_domain.ex</code>:</p>
                    <div class="relative">
                      <pre><code class="language-elixir">defmodule SelectoNorthwind.SelectoDomains.ProductsDomain do
  use SelectoNorthwind.SavedViewContext  # Add this line

  # ... rest of the domain configuration
end</code></pre>
                    </div>
                  </div>
                  
                  <div>
                    <h4 class="font-semibold mb-3 text-base-content flex items-center gap-2">
                      <span class="w-6 h-6 bg-primary text-primary-content rounded-full flex items-center justify-center text-sm font-bold">2</span>
                      Set saved_view_context in LiveView
                    </h4>
                    <p class="text-base-content/70 mb-3">The generated LiveView (with <code class="bg-base-300 px-2 py-1 rounded text-sm">--saved-views</code> flag) automatically sets up the saved view context in the mount function. This looks like:</p>
                    <div class="relative">
                      <pre><code class="language-elixir"># In lib/selecto_northwind_web/live/product_live.ex
def mount(_params, _session, socket) do
  # ... other setup code ...

  socket =
    assign(socket,
      # ... other assigns ...
      saved_view_module: SelectoNorthwind.SelectoDomains.ProductsDomain,
      saved_view_context: "/products_selecto",  # Identifies this set of saved views
      available_saved_views: saved_views
    )

  <%= "{" %>:ok, socket<%= "}" %>
end</code></pre>
                    </div>
                    <div class="alert alert-info mt-3">
                      <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                      <div>
                        The <code>saved_view_context</code> assign is crucial - it identifies which saved views belong to this LiveView. Typically set to the path or a unique identifier for the domain.
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4" />
                  </svg>
                  Run the Migration
                </h3>
                <p class="text-base-content/70 mb-3">After generation, run the migration to create the saved_views table:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix ecto.migrate</code></pre>
                </div>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-7-7 7-7m5 14l7-7-7-7" />
                  </svg>
                  Add Route to Router
                </h3>
                <p class="text-base-content/70 mb-3">Add the generated LiveView route to your <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind_web/router.ex</code>. This will replace the existing placeholder route:</p>
                <div class="relative">
                  <pre class="mb-3"><code class="language-elixir">scope "/", SelectoNorthwindWeb do
  pipe_through :browser

  # Replace this placeholder:
  # get "/products_selecto", PageController, :products_selecto

  # With this LiveView route:
  live "/products_selecto", ProductLive, :index
end</code></pre>
                </div>
                <div class="alert alert-warning">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> This replaces the existing placeholder route <code>get "/products_selecto", PageController, :products_selecto</code> with the actual LiveView route. The route path matches what we specified with the <code>--path</code> option, and the module name is <code>ProductLive</code> (singular).
                  </div>
                </div>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  Build Assets
                </h3>
                <p class="text-base-content/70 mb-3">Compile the updated assets with the new SelectoComponents integration:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix assets.build</code></pre>
                </div>
                <div class="alert alert-error mt-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"></path>
                  </svg>
                  <div>
                    <strong>🚨 Critical for AI Agents:</strong> You <strong>MUST restart the Phoenix server</strong> after this step! The server needs to restart so Tailwind can properly scan the <code class="bg-base-300 px-1 rounded">vendor/selecto_components</code> directory and include the necessary CSS classes. Without restarting, the SelectoComponents UI will not render correctly.
                  </div>
                </div>
              </div>
              
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Verify the Setup
                </h3>
                <p class="text-base-content/70 mb-3">Start your Phoenix server and navigate to <code class="bg-base-300 px-2 py-1 rounded text-sm">/products_selecto</code>:</p>
                <div class="relative">
                  <pre class="mb-4"><code class="language-bash">$ mix phx.server</code></pre>
                </div>
                <div class="alert alert-success">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">You should see the Products Explorer interface with:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>• A query builder form</li>
                      <li>• Data results in table format</li>
                      <li>• Options to switch between Table, Detail, and Graph views</li>
                      <li>• Ability to save and load custom views</li>
                    </ul>
                  </div>
                </div>
              </div>
              <div class="collapse collapse-arrow bg-base-200">
                <input type="checkbox" />
                <div class="collapse-title font-medium">
                  Click to see detailed file generation information
                </div>
                <div class="collapse-content">
                  <div class="space-y-4 text-sm">
                    <div>
                      <h4 class="font-semibold mb-2">Selecto Domain Configuration</h4>
                      <pre class="text-xs"><code class="language-bash">lib/selecto_northwind/selecto_domains/
  └── products_domain.ex  # Domain configuration with Product and related schemas</code></pre>
                      <p class="text-base-content/70 mt-2">This file contains configurations for the Product schema and expanded schemas (Category, Supplier) defining: column definitions, association mappings, default display settings, and query configurations.</p>
                    </div>
                    
                    <div>
                      <h4 class="font-semibold mb-2">LiveView Files (with --live flag)</h4>
                      <pre class="text-xs"><code class="language-bash">lib/selecto_northwind_web/live/
  ├── products_live.ex        # Main LiveView module
  └── products_live.html.heex  # LiveView template</code></pre>
                    </div>
                    
                    <div>
                      <h4 class="font-semibold mb-2">Saved Views Infrastructure (with --saved-views flag)</h4>
                      <pre class="text-xs"><code class="language-bash">lib/selecto_northwind/
  ├── saved_view.ex           # Ecto schema for saved views
  └── saved_view_context.ex   # Context module for saved view operations

priv/repo/migrations/
  └── [timestamp]_create_saved_views.exs  # Database migration</code></pre>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Step 3: Generate Customers Domain -->
        <div id="step-3" class="card bg-base-100 shadow-xl scroll-mt-6">
          <div class="card-body">
            <div class="flex items-center gap-4 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-secondary to-secondary-focus rounded-xl flex items-center justify-center text-white font-bold text-lg">3</div>
              <div>
                <h2 class="card-title text-2xl">Generate Customers Domain with Selecto</h2>
                <p class="text-base-content/70">Add customer management capabilities</p>
              </div>
            </div>
            <p class="text-base-content/80 mb-6">Now let's generate a Selecto domain for the Customer schema and its related schemas. This demonstrates how to integrate multiple business domains into your Selecto-powered application.</p>

            <div class="alert alert-info mb-6">
              <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <div>
                <strong>💡 For AI Agents:</strong> This step follows the same pattern as Step 2 but for the Customers domain. Pay attention to server restarts after asset builds.
              </div>
            </div>

            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                  </svg>
                  Generate the Customers Domain
                </h3>
                <p class="text-base-content/70 mb-3">Run the following Mix task to generate the Customers domain with expanded schemas for related entities:</p>
                <div class="relative">
                  <pre class="mb-4"><code class="language-bash">$ mix selecto.gen.domain SelectoNorthwind.Sales.Customer \
  --expand-schemas SelectoNorthwind.Sales.Order SelectoNorthwind.Sales.CustomerDemographic \
  --live --saved-views --path customers_selecto</code></pre>
                </div>

                <div class="collapse collapse-arrow bg-yellow-50 border border-yellow-200">
                  <input type="checkbox" />
                  <div class="collapse-title text-sm font-medium text-yellow-800">
                    🤖 AI Agent Notes - Click to expand
                  </div>
                  <div class="collapse-content text-sm text-yellow-700">
                    <p>This command requires interactive responses to two prompts. For automated execution, pipe in two Y responses:</p>
                    <code class="bg-yellow-100 px-2 py-1 rounded text-xs">echo -e "Y\nY" |</code> before the command above.
                  </div>
                </div>

                <p class="text-base-content/70 mt-3">The command will prompt you for:</p>
                <ol class="list-decimal list-inside text-sm text-base-content/70 ml-4 space-y-1">
                  <li>About proceeding with uncommitted changes (answer <code class="bg-base-300 px-1 rounded">Y</code>)</li>
                  <li>About SelectoComponents integration (answer <code class="bg-base-300 px-1 rounded">Y</code>)</li>
                </ol>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  What Gets Generated
                </h3>
                <div class="grid gap-3">
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-secondary rounded-full mt-2"></div>
                    <div><strong>Customer Domain Configuration:</strong> Maps Customer schema with Orders and CustomerDemographic relationships</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-secondary rounded-full mt-2"></div>
                    <div><strong>CustomerLive Module:</strong> LiveView for interactive customer data exploration</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-secondary rounded-full mt-2"></div>
                    <div><strong>Saved Views Support:</strong> Persistence layer for customer-specific saved views</div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  Configure the Generated Files
                </h3>

                <div class="space-y-4">
                  <div>
                    <h4 class="font-semibold mb-2">1. Add SavedView Support to Domain</h4>
                    <p class="text-base-content/70 mb-3">Add this line to <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind/selecto_domains/customers_domain.ex</code>:</p>
                    <div class="relative">
                      <pre><code class="language-elixir">defmodule SelectoNorthwind.SelectoDomains.CustomersDomain do
  use SelectoNorthwind.SavedViewContext  # Add this line

  # ... rest of the domain configuration
end</code></pre>
                    </div>
                  </div>

                  <div>
                    <h4 class="font-semibold mb-2">2. Verify LiveView saved_view_context</h4>
                    <p class="text-base-content/70 mb-3">The generated LiveView should already have the saved view context configured in <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind_web/live/customer_live.ex</code>:</p>
                    <div class="relative">
                      <pre><code class="language-elixir"># Should already be configured like this:
socket =
  assign(socket,
    saved_view_module: SelectoNorthwind.SelectoDomains.CustomersDomain,
    saved_view_context: "/customers_selecto",
    available_saved_views: saved_views
  )</code></pre>
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-7-7 7-7m5 14l7-7-7-7" />
                  </svg>
                  Add Route to Router
                </h3>
                <p class="text-base-content/70 mb-3">Add the Customers LiveView route to your <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind_web/router.ex</code>:</p>
                <div class="relative">
                  <pre class="mb-3"><code class="language-elixir">scope "/", SelectoNorthwindWeb do
  pipe_through :browser

  # ... existing routes ...
  live "/products_selecto", ProductLive, :index

  # Add this new route:
  live "/customers_selecto", CustomerLive, :index
end</code></pre>
                </div>
                <div class="alert alert-info">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> The module name is <code>CustomerLive</code> (singular) even though the path uses "customers" (plural).
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  Build Assets
                </h3>
                <p class="text-base-content/70 mb-3">Compile the updated assets:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix assets.build</code></pre>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Test the Customers Interface
                </h3>
                <p class="text-base-content/70 mb-3">Start your Phoenix server and navigate to the new Customers interface:</p>
                <div class="relative">
                  <pre class="mb-4"><code class="language-bash">$ mix phx.server
# Visit http://localhost:4000/customers_selecto</code></pre>
                </div>
                <div class="alert alert-success">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">The Customers Explorer should now include:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>• Customer data with company names and contact information</li>
                      <li>• Ability to explore related Orders data</li>
                      <li>• Customer demographics relationships</li>
                      <li>• Full query builder and saved views functionality</li>
                    </ul>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Try These Customer Queries
                </h3>
                <p class="text-base-content/70 mb-3">Once your Customers interface is running, try these example queries to explore the data:</p>
                <div class="grid gap-3">
                  <div class="p-3 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-1">Find customers from specific countries:</div>
                    <div class="text-xs text-base-content/60">Add filter: Country equals "USA" or "Germany"</div>
                  </div>
                  <div class="p-3 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-1">Customers with recent orders:</div>
                    <div class="text-xs text-base-content/60">Include Orders in the query, then filter by order date</div>
                  </div>
                  <div class="p-3 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-1">Top customers by order count:</div>
                    <div class="text-xs text-base-content/60">Group by Customer, aggregate Orders count, sort descending</div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                  Next Steps
                </h3>
                <p class="text-base-content/70">You now have two independent Selecto domains (Products and Customers) running in your application. Each domain:</p>
                <ul class="list-disc list-inside text-sm text-base-content/70 ml-4 space-y-1 mt-2">
                  <li>Has its own query builder and data explorer</li>
                  <li>Maintains separate saved views</li>
                  <li>Can explore related data through associations</li>
                  <li>Provides table, detail, and graph visualization options</li>
                </ul>
                <p class="text-base-content/70 mt-3">Continue exploring by creating saved views, building complex queries, or proceed to generate additional domains for Orders, Employees, or other entities in the Northwind database.</p>
              </div>
            </div>
          </div>
        </div>

        <!-- Step 4: Generate Orders Domain -->
        <div id="step-4" class="card bg-base-100 shadow-xl scroll-mt-6">
          <div class="card-body">
            <div class="flex items-center gap-4 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-warning to-warning-focus rounded-xl flex items-center justify-center text-white font-bold text-lg">4</div>
              <div>
                <h2 class="card-title text-2xl">Generate Orders Domain with Complex Relationships</h2>
                <p class="text-base-content/70">Connect sales data across multiple entities</p>
              </div>
            </div>
            <p class="text-base-content/80 mb-6">The Orders domain is the heart of the sales system, connecting customers, products, employees, and shipping. This step demonstrates working with complex multi-table relationships in Selecto.</p>

            <div class="alert alert-info mb-6">
              <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <div>
                <strong>💡 For AI Agents:</strong> This command includes more expanded schemas than previous steps, demonstrating how Selecto handles complex business relationships.
              </div>
            </div>

            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01" />
                  </svg>
                  Generate the Orders Domain
                </h3>
                <p class="text-base-content/70 mb-3">Run the following Mix task to generate the Orders domain with its extensive relationships:</p>
                <div class="relative">
                  <pre class="mb-4"><code class="language-bash">$ mix selecto.gen.domain SelectoNorthwind.Sales.Order \
  --expand-schemas SelectoNorthwind.Sales.OrderDetail \
    SelectoNorthwind.Sales.Shipper \
    SelectoNorthwind.Hr.Employee \
    SelectoNorthwind.Sales.Customer \
  --live --saved-views --path orders_selecto</code></pre>
                </div>

                <div class="collapse collapse-arrow bg-yellow-50 border border-yellow-200">
                  <input type="checkbox" />
                  <div class="collapse-title text-sm font-medium text-yellow-800">
                    🤖 AI Agent Notes - Click to expand
                  </div>
                  <div class="collapse-content text-sm text-yellow-700">
                    <p>This command requires interactive responses to two prompts. For automated execution, pipe in two Y responses:</p>
                    <code class="bg-yellow-100 px-2 py-1 rounded text-xs">echo -e "Y\nY" |</code> before the command above.
                  </div>
                </div>

                <p class="text-base-content/70 mt-3">The command will prompt you for:</p>
                <ol class="list-decimal list-inside text-sm text-base-content/70 ml-4 space-y-1">
                  <li>About proceeding with uncommitted changes (answer <code class="bg-base-300 px-1 rounded">Y</code>)</li>
                  <li>About SelectoComponents integration (answer <code class="bg-base-300 px-1 rounded">Y</code>)</li>
                </ol>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Understanding the Orders Relationships
                </h3>
                <div class="grid gap-3">
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-warning rounded-full mt-2"></div>
                    <div><strong>Order → OrderDetails:</strong> One-to-many relationship showing line items for each order with products, quantities, and prices</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-warning rounded-full mt-2"></div>
                    <div><strong>Order → Customer:</strong> Many-to-one relationship linking orders to the customer who placed them</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-warning rounded-full mt-2"></div>
                    <div><strong>Order → Employee:</strong> Many-to-one relationship showing which employee processed the order</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-warning rounded-full mt-2"></div>
                    <div><strong>Order → Shipper:</strong> Many-to-one relationship indicating the shipping company used</div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  Configure the Generated Files
                </h3>

                <div class="space-y-4">
                  <div>
                    <h4 class="font-semibold mb-2">1. Add SavedView Support to Domain</h4>
                    <p class="text-base-content/70 mb-3">Add this line to <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind/selecto_domains/orders_domain.ex</code>:</p>
                    <div class="relative">
                      <pre><code class="language-elixir">defmodule SelectoNorthwind.SelectoDomains.OrdersDomain do
  use SelectoNorthwind.SavedViewContext  # Add this line

  # ... rest of the domain configuration
end</code></pre>
                    </div>
                  </div>

                  <div>
                    <h4 class="font-semibold mb-2">2. Verify LiveView Configuration</h4>
                    <p class="text-base-content/70 mb-3">The generated LiveView should have the saved view context configured in <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind_web/live/order_live.ex</code>:</p>
                    <div class="relative">
                      <pre><code class="language-elixir"># Should already be configured like this:
socket =
  assign(socket,
    saved_view_module: SelectoNorthwind.SelectoDomains.OrdersDomain,
    saved_view_context: "/orders_selecto",
    available_saved_views: saved_views
  )</code></pre>
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-7-7 7-7m5 14l7-7-7-7" />
                  </svg>
                  Add Route to Router
                </h3>
                <p class="text-base-content/70 mb-3">Add the Orders LiveView route to your <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind_web/router.ex</code>:</p>
                <div class="relative">
                  <pre class="mb-3"><code class="language-elixir">scope "/", SelectoNorthwindWeb do
  pipe_through :browser

  # ... existing routes ...
  live "/products_selecto", ProductLive, :index
  live "/customers_selecto", CustomerLive, :index

  # Add this new route:
  live "/orders_selecto", OrderLive, :index
end</code></pre>
                </div>
                <div class="alert alert-info">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> The module name is <code>OrderLive</code> (singular) matching the schema name.
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  Build Assets and Start Server
                </h3>
                <p class="text-base-content/70 mb-3">Compile the assets and start the server:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix assets.build
$ mix phx.server</code></pre>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Test the Orders Interface
                </h3>
                <p class="text-base-content/70 mb-3">Navigate to the Orders interface at <code class="bg-base-300 px-2 py-1 rounded text-sm">http://localhost:4000/orders_selecto</code></p>

                <div class="alert alert-success">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">The Orders Explorer provides comprehensive sales data access:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>• Order headers with dates, status, and shipping information</li>
                      <li>• Order details showing individual line items and products</li>
                      <li>• Customer information for each order</li>
                      <li>• Employee data showing who processed orders</li>
                      <li>• Shipper information for delivery tracking</li>
                    </ul>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                  Powerful Order Analysis Queries
                </h3>
                <p class="text-base-content/70 mb-3">The Orders domain enables complex business intelligence queries. Try these examples:</p>

                <div class="grid gap-3">
                  <div class="p-4 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-2">📊 Revenue by Customer</div>
                    <div class="text-xs text-base-content/60">
                      1. Include OrderDetails in your query<br/>
                      2. Group by Customer Company Name<br/>
                      3. Aggregate: Sum of (Unit Price × Quantity)<br/>
                      4. Sort by revenue descending
                    </div>
                  </div>

                  <div class="p-4 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-2">📈 Monthly Sales Trends</div>
                    <div class="text-xs text-base-content/60">
                      1. Group by Order Date (month)<br/>
                      2. Include OrderDetails<br/>
                      3. Aggregate: Count orders and sum revenue<br/>
                      4. View as Graph for visualization
                    </div>
                  </div>

                  <div class="p-4 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-2">👥 Employee Performance</div>
                    <div class="text-xs text-base-content/60">
                      1. Include Employee and OrderDetails<br/>
                      2. Group by Employee Name<br/>
                      3. Aggregate: Count of orders, Sum of revenue<br/>
                      4. Filter by date range for specific periods
                    </div>
                  </div>

                  <div class="p-4 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-2">🚚 Shipping Analysis</div>
                    <div class="text-xs text-base-content/60">
                      1. Include Shipper information<br/>
                      2. Group by Shipper Company Name<br/>
                      3. Aggregate: Average shipping cost, delivery time<br/>
                      4. Compare shipper performance metrics
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                  What You've Accomplished
                </h3>
                <p class="text-base-content/70">With the Orders domain, you've now created a powerful sales analysis system that:</p>
                <ul class="list-disc list-inside text-sm text-base-content/70 ml-4 space-y-1 mt-2">
                  <li>Connects multiple business entities in a single interface</li>
                  <li>Enables complex multi-table queries without writing SQL</li>
                  <li>Provides instant visualization of sales metrics</li>
                  <li>Allows saving and sharing of business intelligence queries</li>
                  <li>Demonstrates Selecto's ability to handle real-world complexity</li>
                </ul>

                <div class="alert alert-info mt-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <strong>Pro Tip:</strong> The Orders domain is ideal for creating dashboard views. Try saving different queries as views like "This Month's Sales", "Top Customers", or "Pending Orders" for quick access to key metrics.
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Step 5: Generate Employees/HR Domain -->
        <div id="step-5" class="card bg-base-100 shadow-xl scroll-mt-6">
          <div class="card-body">
            <div class="flex items-center gap-4 mb-4">
              <div class="w-12 h-12 bg-gradient-to-br from-info to-info-focus rounded-xl flex items-center justify-center text-white font-bold text-lg">5</div>
              <div>
                <h2 class="card-title text-2xl">Generate Employees/HR Domain</h2>
                <p class="text-base-content/70">Complete your HR management system</p>
              </div>
            </div>
            <p class="text-base-content/80 mb-6">The Employees domain represents the human resources aspect of the business, including employee information, reporting structures, and territorial assignments. This completes the core business domains of the Northwind system.</p>

            <div class="alert alert-info mb-6">
              <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <div>
                <strong>💡 For AI Agents:</strong> This domain includes self-referential relationships (employees reporting to other employees) and geographic territory assignments.
              </div>
            </div>

            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                  </svg>
                  Generate the Employees Domain
                </h3>
                <p class="text-base-content/70 mb-3">Run the following Mix task to generate the Employees domain with HR relationships:</p>
                <div class="relative">
                  <pre class="mb-4"><code class="language-bash">$ mix selecto.gen.domain SelectoNorthwind.Hr.Employee \
  --expand-schemas SelectoNorthwind.Hr.EmployeeTerritory \
    SelectoNorthwind.Geography.Territory \
    SelectoNorthwind.Sales.Order \
  --live --saved-views --path employees_selecto</code></pre>
                </div>

                <div class="collapse collapse-arrow bg-yellow-50 border border-yellow-200">
                  <input type="checkbox" />
                  <div class="collapse-title text-sm font-medium text-yellow-800">
                    🤖 AI Agent Notes - Click to expand
                  </div>
                  <div class="collapse-content text-sm text-yellow-700">
                    <p>This command requires interactive responses to two prompts. For automated execution, pipe in two Y responses:</p>
                    <code class="bg-yellow-100 px-2 py-1 rounded text-xs">echo -e "Y\nY" |</code> before the command above.
                  </div>
                </div>

                <p class="text-base-content/70 mt-3">The command will prompt you for:</p>
                <ol class="list-decimal list-inside text-sm text-base-content/70 ml-4 space-y-1">
                  <li>About proceeding with uncommitted changes (answer <code class="bg-base-300 px-1 rounded">Y</code>)</li>
                  <li>About SelectoComponents integration (answer <code class="bg-base-300 px-1 rounded">Y</code>)</li>
                </ol>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Understanding the HR Structure
                </h3>
                <div class="grid gap-3">
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-info rounded-full mt-2"></div>
                    <div><strong>Employee Hierarchy:</strong> Employees have a reports_to field creating organizational hierarchy</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-info rounded-full mt-2"></div>
                    <div><strong>Territory Assignments:</strong> Employees are assigned to geographic territories through EmployeeTerritory</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-info rounded-full mt-2"></div>
                    <div><strong>Sales Responsibility:</strong> Employees manage customer orders tracked through the Order relationship</div>
                  </div>
                  <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-info rounded-full mt-2"></div>
                    <div><strong>Personal Information:</strong> Complete employee profiles with contact details, hire dates, and notes</div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  Configure the Generated Files
                </h3>

                <div class="space-y-4">
                  <div>
                    <h4 class="font-semibold mb-2">1. Add SavedView Support to Domain</h4>
                    <p class="text-base-content/70 mb-3">Add this line to <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind/selecto_domains/employees_domain.ex</code>:</p>
                    <div class="relative">
                      <pre><code class="language-elixir">defmodule SelectoNorthwind.SelectoDomains.EmployeesDomain do
  use SelectoNorthwind.SavedViewContext  # Add this line

  # ... rest of the domain configuration
end</code></pre>
                    </div>
                  </div>

                  <div>
                    <h4 class="font-semibold mb-2">2. Verify LiveView Configuration</h4>
                    <p class="text-base-content/70 mb-3">The generated LiveView should have the saved view context configured in <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind_web/live/employee_live.ex</code>:</p>
                    <div class="relative">
                      <pre><code class="language-elixir"># Should already be configured like this:
socket =
  assign(socket,
    saved_view_module: SelectoNorthwind.SelectoDomains.EmployeesDomain,
    saved_view_context: "/employees_selecto",
    available_saved_views: saved_views
  )</code></pre>
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-7-7 7-7m5 14l7-7-7-7" />
                  </svg>
                  Add Route to Router
                </h3>
                <p class="text-base-content/70 mb-3">Add the Employees LiveView route to your <code class="bg-base-300 px-2 py-1 rounded text-sm">lib/selecto_northwind_web/router.ex</code>:</p>
                <div class="relative">
                  <pre class="mb-3"><code class="language-elixir">scope "/", SelectoNorthwindWeb do
  pipe_through :browser

  # ... existing routes ...
  live "/products_selecto", ProductLive, :index
  live "/customers_selecto", CustomerLive, :index
  live "/orders_selecto", OrderLive, :index

  # Add this new route:
  live "/employees_selecto", EmployeeLive, :index
end</code></pre>
                </div>
                <div class="alert alert-info">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> The module name is <code>EmployeeLive</code> (singular) matching the schema name.
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                  </svg>
                  Build Assets and Start Server
                </h3>
                <p class="text-base-content/70 mb-3">Compile the assets and start the server:</p>
                <div class="relative">
                  <pre><code class="language-bash">$ mix assets.build
$ mix phx.server</code></pre>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Test the Employees Interface
                </h3>
                <p class="text-base-content/70 mb-3">Navigate to the Employees interface at <code class="bg-base-300 px-2 py-1 rounded text-sm">http://localhost:4000/employees_selecto</code></p>

                <div class="alert alert-success">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <div class="font-semibold">The Employees Explorer provides comprehensive HR data management:</div>
                    <ul class="mt-2 space-y-1 text-sm">
                      <li>• Employee profiles with complete contact information</li>
                      <li>• Organizational hierarchy through reporting relationships</li>
                      <li>• Territory assignments and geographic responsibilities</li>
                      <li>• Sales order history for each employee</li>
                      <li>• Employee photos and personal notes</li>
                    </ul>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4" />
                  </svg>
                  HR Analytics Queries to Try
                </h3>
                <p class="text-base-content/70 mb-3">The Employees domain enables sophisticated HR analytics. Experiment with these queries:</p>

                <div class="grid gap-3">
                  <div class="p-4 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-2">🏢 Organizational Structure</div>
                    <div class="text-xs text-base-content/60">
                      1. Filter by ReportsTo to see direct reports<br/>
                      2. Group by Manager to see team sizes<br/>
                      3. Use hierarchical queries to view org chart<br/>
                      4. Analyze reporting chains and depth
                    </div>
                  </div>

                  <div class="p-4 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-2">🗺️ Territory Coverage</div>
                    <div class="text-xs text-base-content/60">
                      1. Include EmployeeTerritory and Territory<br/>
                      2. Group by Region to see coverage<br/>
                      3. Identify territories with multiple reps<br/>
                      4. Find gaps in territorial coverage
                    </div>
                  </div>

                  <div class="p-4 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-2">💼 Sales Performance by Employee</div>
                    <div class="text-xs text-base-content/60">
                      1. Include Orders relationship<br/>
                      2. Aggregate order counts and values<br/>
                      3. Compare performance across teams<br/>
                      4. Track sales trends by employee
                    </div>
                  </div>

                  <div class="p-4 bg-base-200 rounded-lg">
                    <div class="font-semibold text-sm mb-2">📅 Tenure Analysis</div>
                    <div class="text-xs text-base-content/60">
                      1. Calculate years of service from HireDate<br/>
                      2. Group by hire year for cohort analysis<br/>
                      3. Correlate tenure with performance<br/>
                      4. Identify anniversary milestones
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                  Completing the Business System
                </h3>
                <p class="text-base-content/70">With the Employees domain, you've now built a complete business intelligence system covering:</p>
                <ul class="list-disc list-inside text-sm text-base-content/70 ml-4 space-y-1 mt-2">
                  <li><strong>Products:</strong> Inventory and catalog management</li>
                  <li><strong>Customers:</strong> Client relationships and demographics</li>
                  <li><strong>Orders:</strong> Sales transactions and fulfillment</li>
                  <li><strong>Employees:</strong> Human resources and organizational structure</li>
                </ul>

                <div class="alert alert-info mt-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <div>
                    <strong>Pro Tip:</strong> The Employee domain's self-referential relationship (reports_to) demonstrates Selecto's ability to handle recursive structures. Try creating views that show complete organizational hierarchies or team structures.
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Foundation steps message -->
        <div id="complete" class="card bg-info/10 border border-info/20 shadow-lg scroll-mt-6">
          <div class="card-body">
            <h2 class="card-title text-info mb-4">
              <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
              </svg>
              🎉 Complete Enterprise System Built with Selecto!
            </h2>
            <p class="text-base-content/80 mb-4">Outstanding! You've successfully integrated Selecto across ALL major business domains in the Northwind database. Your application now provides comprehensive business intelligence capabilities spanning Products, Customers, Orders, and Employees.</p>

            <div class="grid md:grid-cols-2 gap-4">
              <div class="p-4 bg-base-100 rounded-lg border">
                <h4 class="font-semibold mb-2">✅ Complete System Built:</h4>
                <ul class="text-sm space-y-1 text-base-content/70">
                  <li>• Set up Phoenix application with Northwind database</li>
                  <li>• Added Selecto dependencies to your project</li>
                  <li>• Products domain with Categories & Suppliers</li>
                  <li>• Customers domain with Demographics</li>
                  <li>• Orders domain connecting 5+ entities</li>
                  <li>• Employees domain with HR hierarchies</li>
                  <li>• Saved views infrastructure for all domains</li>
                </ul>
              </div>

              <div class="p-4 bg-base-100 rounded-lg border">
                <h4 class="font-semibold mb-2">🚀 Advanced Features to Explore:</h4>
                <ul class="text-sm space-y-1 text-base-content/70">
                  <li>• Create cross-domain dashboards</li>
                  <li>• Build executive reporting views</li>
                  <li>• Implement role-based access controls</li>
                  <li>• Add real-time data updates with LiveView</li>
                  <li>• Customize components for your brand</li>
                  <li>• Export data to various formats</li>
                </ul>
              </div>
            </div>
            
            <div class="mt-4 p-4 bg-base-200 rounded-lg">
              <p class="text-sm text-base-content/70 text-center">
                <svg class="w-4 h-4 inline mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                This tutorial will be expanded with additional steps. For now, explore the generated Products interface and experiment with the Selecto features!
              </p>
            </div>
          </div>
        </div>

        <!-- Navigation -->
        <div class="mt-12 flex justify-between items-center">
          <a href="/" class="btn btn-outline gap-2">
            <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            Back to Home
          </a>
          <div class="text-sm text-base-content/60">
            More tutorial steps coming soon - explore the generated features in the meantime!
          </div>
        </div>
      </div>
    </div>
  </div>
  </div>
</div>