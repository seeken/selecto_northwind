<Layouts.flash_group flash={@flash} />

<!-- Prism.js for syntax highlighting -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-elixir.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-bash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/toolbar/prism-toolbar.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/toolbar/prism-toolbar.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js"></script>

<div class="min-h-screen bg-gradient-to-br from-base-100 to-base-200">
  <!-- Fixed Navigation Sidebar -->
  <div class="fixed left-0 top-20 h-full w-64 bg-base-100 border-r border-base-300 overflow-y-auto z-10 hidden lg:block">
    <div class="p-6">
      <h3 class="text-lg font-bold mb-4 text-base-content">Tutorial Navigation</h3>
      <nav class="space-y-2">
        <a href="#overview" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-primary">Overview</span>
          <span class="text-base-content/70 block">Why Postgrex without Ecto?</span>
        </a>
        <a href="#step-1" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-accent">Step 1:</span>
          <span class="text-base-content/70 block">Add Dependencies</span>
        </a>
        <a href="#step-2" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-success">Step 2:</span>
          <span class="text-base-content/70 block">Configure Database Connection</span>
        </a>
        <a href="#step-3" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-secondary">Step 3:</span>
          <span class="text-base-content/70 block">Generate Domain from Database</span>
        </a>
        <a href="#step-4" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-warning">Step 4:</span>
          <span class="text-base-content/70 block">Configure LiveView Connection</span>
        </a>
        <a href="#step-5" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold text-info">Step 5:</span>
          <span class="text-base-content/70 block">Run Migrations, Build Assets & Test</span>
        </a>
        <div class="divider my-4"></div>
        <a href="#comparison" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <span class="font-semibold">ðŸ“Š Ecto vs Postgrex</span>
        </a>
        <div class="divider my-4"></div>
        <a href="/" class="block px-4 py-2 rounded-lg hover:bg-base-200 transition-colors text-sm">
          <svg class="w-4 h-4 inline mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back to Home
        </a>
      </nav>
    </div>
  </div>

  <!-- Main Content Area -->
  <div>
    <!-- Header Section -->
    <div class="bg-gradient-to-r from-purple-600 to-indigo-600 text-white">
      <div class="py-12">
        <div class="mx-auto">
        <div class="flex items-center gap-4 mb-6">
          <div class="p-3 bg-white/10 rounded-xl">
            <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m11.5 6.5v3a2.5 2.5 0 01-5 0v-3m0 5h.01" />
            </svg>
          </div>
          <div>
            <h1 class="text-4xl font-bold mb-2">Selecto + Postgrex Tutorial</h1>
            <p class="text-xl text-white/80">Use Selecto directly with PostgreSQL - No Ecto Required!</p>
          </div>
        </div>

        <div class="flex flex-wrap gap-3">
          <div class="badge badge-outline badge-lg border-white/30 text-white">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
            </svg>
            Phoenix LiveView
          </div>
          <div class="badge badge-outline badge-lg border-white/30 text-white">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7" />
            </svg>
            Postgrex
          </div>
          <div class="badge badge-outline badge-lg border-white/30 text-white">
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4" />
            </svg>
            No Ecto Schemas
          </div>
        </div>
      </div>
    </div>

    <!-- Content Section -->
    <div class="py-12">
      <div class="mx-auto">
      <!-- Overview Section -->
      <section id="overview" class="mb-16">
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title text-3xl mb-4 flex items-center gap-3 text-base-content">
              <div class="badge badge-primary badge-lg">Overview</div>
            </h2>

            <div class="prose max-w-none">
              <p class="text-lg text-base-content/80 mb-6">
                This tutorial shows you how to use Selecto with <strong>direct PostgreSQL connections</strong> via Postgrex,
                without requiring Ecto schemas.
              </p>
            </div>
          </div>
        </div>
      </section>

      <!-- Step 1: Dependencies -->
      <section id="step-1" class="mb-16">
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title text-3xl mb-4 flex items-center gap-3 text-base-content">
              <div class="badge badge-accent badge-lg">Step 1</div>
              Add Selecto Dependencies
            </h2>

            <p class="text-base-content/80 mb-6">The first step is to add the Selecto libraries to your Phoenix project. These libraries provide powerful data selection, filtering, and UI components for your application.</p>

            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                  Add Dependencies to mix.exs
                </h3>
                <p class="text-base-content/70 mb-3">Open your <code class="bg-base-300 px-2 py-1 rounded text-sm">mix.exs</code> file and add the following dependencies to the <code class="bg-base-300 px-2 py-1 rounded text-sm">deps</code> function:</p>
                <div class="relative">
                  <pre><code class="language-elixir">defp deps do
  [
    # ... existing dependencies ...

    # Selecto libraries
    <%= "{" %>:selecto, path: "./vendor/selecto"<%= "}" %>,
    <%= "{" %>:selecto_components, path: "./vendor/selecto_components"<%= "}" %>,
    <%= "{" %>:selecto_mix, path: "./vendor/selecto_mix", only: [:dev, :test]<%= "}" %>
  ]
end</code></pre>
                </div>

                <div class="alert alert-warning mt-4">
                  <svg class="w-6 h-6 stroke-current shrink-0" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"></path>
                  </svg>
                  <div>
                    <strong>Note:</strong> These dependencies are referenced as local paths because they are included as git submodules in the vendor directory. In a production environment, you would typically reference them from Hex or GitHub.
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  What Each Library Does
                </h3>
                <div class="grid gap-4">
                  <div class="flex items-start gap-3 p-4 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-primary rounded-full mt-2"></div>
                    <div>
                      <strong><code class="bg-base-300 px-2 py-1 rounded text-sm">selecto</code></strong>: Core library providing the query builder and data selection engine
                    </div>
                  </div>
                  <div class="flex items-start gap-3 p-4 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-primary rounded-full mt-2"></div>
                    <div>
                      <strong><code class="bg-base-300 px-2 py-1 rounded text-sm">selecto_components</code></strong>: Pre-built Phoenix LiveView components for data tables, filters, and visualizations
                    </div>
                  </div>
                  <div class="flex items-start gap-3 p-4 bg-base-200 rounded-lg">
                    <div class="w-2 h-2 bg-primary rounded-full mt-2"></div>
                    <div>
                      <strong><code class="bg-base-300 px-2 py-1 rounded text-sm">selecto_mix</code></strong>: Mix tasks and generators for scaffolding Selecto-based views and components (development only)
                    </div>
                  </div>
                </div>
              </div>

              <div>
                <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                  </svg>
                  Install Dependencies
                </h3>
                <p class="text-base-content/70 mb-3">After adding the dependencies, fetch and compile them:</p>
                <div class="relative">
                  <pre><code class="language-bash">mix deps.get
mix deps.compile</code></pre>
                </div>
              </div>

              <div class="alert alert-info">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                <span><strong>Notice:</strong> No <code>ecto</code> or <code>ecto_sql</code> dependencies required! Selecto can work directly with Postgrex for schema-free database access.</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- Step 2: Configure Connection -->
      <section id="step-2" class="mb-16">
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title text-3xl mb-4 flex items-center gap-3 text-base-content">
              <div class="badge badge-success badge-lg">Step 2</div>
              Configure Database Connection
            </h2>

            <p class="text-base-content/80 mb-4">
              Configure a supervised Postgrex connection in your application.
            </p>

            <h3 class="text-xl font-bold mb-3 text-base-content">Update <code>config/dev.exs</code>:</h3>

            <pre><code class="language-elixir">config :selecto_northwind, SelectoNorthwind.Database,
  hostname: "localhost",
  port: 5432,
  database: "selecto_northwind_dev",
  username: "postgres",
  password: "postgres",
  pool_size: 10</code></pre>

            <div class="divider text-base-content">THEN</div>

            <h3 class="text-xl font-bold mb-3 text-base-content">Update <code>lib/selecto_northwind/application.ex</code>:</h3>

            <pre><code class="language-elixir"># In lib/selecto_northwind/application.ex, add to children list:
children = [
  # Start Postgrex connection pool
  Postgrex.child_spec(
    Application.get_env(:selecto_northwind, SelectoNorthwind.Database)
    ++ [name: SelectoNorthwind.Database]
  ),

  # Phoenix endpoint
  SelectoNorthwindWeb.Endpoint
]</code></pre>

            <div class="alert alert-warning mt-4">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>
              <span><strong>Important:</strong> The <code>name:</code> option creates a named connection you can reference throughout your app.</span>
            </div>
          </div>
        </div>
      </section>

      <!-- Step 3: Generate Domain -->
      <section id="step-3" class="mb-16">
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title text-3xl mb-4 flex items-center gap-3 text-base-content">
              <div class="badge badge-secondary badge-lg">Step 3</div>
              Generate Domain from Database
            </h2>

            <p class="text-base-content/80 mb-4">
              Use the <code>mix selecto.gen.domain</code> task with database connection and important flags to automatically
              generate a domain file, LiveView, and asset integrations by introspecting your PostgreSQL database.
            </p>

            <div class="alert alert-primary mb-4">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <span><strong>Magic!</strong> Selecto will query PostgreSQL system catalogs to discover tables, columns, types, primary keys, and foreign key relationships.</span>
            </div>

            <h3 class="text-xl font-bold mb-3 text-base-content">Recommended Command (with all features)</h3>

            <pre><code class="language-bash">DATABASE_URL="postgres://postgres:postgres@localhost/selecto_northwind_dev" \
  mix selecto.gen.domain.postgrex --table products \
  --expand --live --saved-views --path products_postgrex</code></pre>

            <div class="alert alert-info mb-4">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <div>
                <strong>Important Flags:</strong>
                <ul class="text-sm mt-2 ml-4 list-disc">
                  <li><code>--expand</code> - <strong>RECOMMENDED!</strong> Automatically introspects related tables and includes them as nested schemas</li>
                  <li><code>--live</code> - Generates the LiveView module automatically</li>
                  <li><code>--saved-views</code> - Adds support for saving/loading user-defined views</li>
                  <li><code>--path</code> - Specifies the route path for the LiveView</li>
                </ul>
              </div>
            </div>

            <h3 class="text-xl font-bold mb-3 text-base-content mt-6">Advanced: Specialized Join Types</h3>

            <pre><code class="language-bash">DATABASE_URL="postgres://postgres:postgres@localhost/selecto_northwind_dev" \
  mix selecto.gen.domain.postgrex --table products \
  --expand --dimension category,supplier --live</code></pre>

            <div class="alert alert-success mb-4">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <div>
                <strong>Specialized Join Types:</strong>
                <ul class="text-sm mt-2 ml-4 list-disc">
                  <li><code>--dimension category,supplier</code> - Configure associations as dimension joins (for lookup tables)</li>
                  <li><code>--tagging tags</code> - Configure as tagging joins (many-to-many with aggregation)</li>
                  <li><code>--hierarchical parent</code> - Configure as hierarchical joins (self-referential)</li>
                  <li><code>--star-dimension customer</code> - Configure as OLAP star schema dimensions</li>
                  <li><code>--snowflake-dimension category</code> - Configure as normalized snowflake dimensions</li>
                </ul>
              </div>
            </div>

            <div class="alert alert-warning mb-4">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>
              <div>
                <strong>Why --expand is important:</strong> Without the <code>--expand</code> flag, associations are detected but related table schemas aren't included, which prevents joins from working. The <code>--expand</code> flag introspects foreign key relationships and includes the full schema definitions for related tables (like categories and suppliers for products).
              </div>
            </div>

            <h3 class="text-lg font-semibold mb-3">What This Command Does</h3>
            <div class="grid gap-3">
              <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">1</div>
                <div><strong>Introspect your PostgreSQL database</strong> to discover table structure, columns, types, and relationships</div>
              </div>
              <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">2</div>
                <div><strong>Generate a Selecto domain configuration</strong> with complete field definitions</div>
              </div>
              <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">3</div>
                <div><strong>Create LiveView module</strong> for interactive data exploration (with <code>--live</code>)</div>
              </div>
              <div class="flex items-start gap-3 p-3 bg-base-200 rounded-lg">
                <div class="w-6 h-6 bg-primary rounded-full flex items-center justify-center text-white text-sm font-bold">4</div>
                <div><strong>Generate saved views infrastructure</strong> for persisting user-defined views (with <code>--saved-views</code>)</div>
              </div>
            </div>

            <div class="alert alert-warning mt-4">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>
              <div>
                <strong>Important:</strong> After generation, you'll need to manually integrate SelectoComponents assets in Step 5 by running <code>mix selecto.components.integrate</code>.
              </div>
            </div>

            <div class="divider text-base-content">ALTERNATIVE: Using Explicit Connection Parameters</div>

            <pre><code class="language-bash">mix selecto.gen.domain.postgrex \
  --table products \
  --host localhost \
  --port 5432 \
  --database selecto_northwind_dev \
  --username postgres \
  --password postgres \
  --expand --live --saved-views --path products_postgrex</code></pre>

            <div class="alert alert-success mt-4">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <div>
                <h4 class="font-bold">Generated Files</h4>
                <ul class="text-sm mt-2 ml-4 list-disc">
                  <li><code>lib/selecto_northwind/selecto_domains/products_postgrex_domain.ex</code> - Domain configuration with associations</li>
                  <li><code>lib/selecto_northwind_web/live/products_postgrex_live.ex</code> - LiveView module (if <code>--live</code> used)</li>
                  <li>Migration for saved_views table (if <code>--saved-views</code> used)</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- Step 4: Configure LiveView Connection -->
      <section id="step-4" class="mb-16">
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title text-3xl mb-4 flex items-center gap-3 text-base-content">
              <div class="badge badge-warning badge-lg">Step 4</div>
              Configure LiveView Connection
            </h2>

            <p class="text-base-content/80 mb-4">
              The LiveView was automatically generated in Step 3. Now we need to configure it to use the Postgrex connection.
            </p>

            <h3 class="text-xl font-bold mb-3 text-base-content">Update <code>lib/selecto_northwind_web/live/products_postgrex_live.ex</code>:</h3>

            <p class="text-base-content/70 mb-3">
              Add the <code>get_connection/0</code> function to provide the Postgrex connection name:
            </p>

            <pre><code class="language-elixir">defmodule SelectoNorthwindWeb.ProductsPostgrexLive do
  use SelectoNorthwindWeb, :live_view
  use SelectoComponents.Form,
    domain: SelectoNorthwind.SelectoDomains.ProductsPostgrexDomain.domain()

  # IMPORTANT: Provide the Postgrex connection name
  def get_connection do
    SelectoNorthwind.Database  # Named connection from application.ex
  end

  @impl true
  def mount(_params, _session, socket) do
    # Generated mount function with saved views support
    # ... existing code ...
    <%= "{" %>:ok, socket<%= "}" %>
  end

  # SelectoComponents will use get_connection/0 automatically
end</code></pre>

            <div class="alert alert-warning mt-4">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>
              <div>
                <strong>Critical:</strong> The <code>get_connection/0</code> function is required to tell SelectoComponents which database connection to use. Without it, the LiveView won't be able to query data!
              </div>
            </div>

            <div class="alert alert-success mt-4">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <span><strong>That's it!</strong> SelectoComponents will now use the Postgrex connection to query data directly from PostgreSQL.</span>
            </div>
          </div>
        </div>
      </section>

      <!-- Step 5: Run Migrations, Build Assets & Test -->
      <section id="step-5" class="mb-16">
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title text-3xl mb-4 flex items-center gap-3 text-base-content">
              <div class="badge badge-info badge-lg">Step 5</div>
              Run Migrations, Build Assets & Test
            </h2>

            <div>
              <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7" />
                </svg>
                Run Migration (if using --saved-views)
              </h3>
              <p class="text-base-content/70 mb-3">If you used the <code>--saved-views</code> flag, run the generated migration:</p>
              <pre><code class="language-bash">mix ecto.migrate</code></pre>
            </div>

            <div class="divider text-base-content">THEN</div>

            <div>
              <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-7-7 7-7m5 14l7-7-7-7" />
                </svg>
                Add Route to Router
              </h3>
              <p class="text-base-content/70 mb-3">Add the generated LiveView route to <code>lib/selecto_northwind_web/router.ex</code>:</p>
              <pre><code class="language-elixir">scope "/", SelectoNorthwindWeb do
  pipe_through :browser

  live "/products_postgrex", ProductsPostgrexLive, :index
end</code></pre>
            </div>

            <div class="divider text-base-content">THEN</div>

            <div>
              <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                Integrate SelectoComponents Assets
              </h3>
              <p class="text-base-content/70 mb-3">Run the integration task to set up Chart.js, Alpine.js, hooks, and Tailwind configuration:</p>
              <pre><code class="language-bash">mix selecto.components.integrate</code></pre>
              <div class="alert alert-info mt-4">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                <div>
                  <strong>What this does:</strong> Adds Chart.js CDN, Alpine.js integration, SelectoComponents LiveView hooks, and updates Tailwind config to scan the vendor/selecto_components directory.
                </div>
              </div>
            </div>

            <div class="divider text-base-content">THEN</div>

            <div>
              <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                </svg>
                Build Assets
              </h3>
              <p class="text-base-content/70 mb-3">Compile the assets with the new SelectoComponents integration:</p>
              <pre><code class="language-bash">mix assets.build</code></pre>
              <div class="alert alert-error mt-4">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path></svg>
                <div>
                  <strong>ðŸš¨ Critical for AI Agents:</strong> You <strong>MUST restart the Phoenix server</strong> after this step! The server needs to restart so Tailwind can properly scan the <code class="bg-base-300 px-1 rounded">vendor/selecto_components</code> directory and include the necessary CSS classes. Without restarting, the SelectoComponents UI will not render correctly.
                </div>
              </div>
            </div>

            <div class="divider text-base-content">THEN</div>

            <div>
              <h3 class="text-lg font-semibold mb-3 flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                Verify the Setup
              </h3>
              <p class="text-base-content/70 mb-3">Start your Phoenix server and navigate to the route:</p>
              <pre><code class="language-bash">mix phx.server

# Visit in browser
open http://localhost:4000/products_postgrex</code></pre>

              <div class="alert alert-success mt-4">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
                <div>
                  <div class="font-semibold">ðŸŽ‰ You should see the Products Explorer interface with:</div>
                  <ul class="mt-2 space-y-1 text-sm">
                    <li>âœ… View/Filter/Export tabs</li>
                    <li>âœ… Aggregate and Detail view modes</li>
                    <li>âœ… Real-time data from PostgreSQL via Postgrex</li>
                    <li>âœ… Interactive filtering, sorting, and grouping</li>
                    <li>âœ… All styling and JavaScript working correctly</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- Comparison Section -->
      <section id="comparison" class="mb-16">
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <h2 class="card-title text-3xl mb-4 text-base-content">ðŸ“Š Ecto vs Postgrex Approach</h2>

            <div class="overflow-x-auto">
              <table class="table table-zebra">
                <thead>
                  <tr>
                    <th class="text-base-content">Feature</th>
                    <th class="text-base-content">With Ecto Schemas</th>
                    <th class="text-base-content">Direct Postgrex</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td class="font-bold text-base-content">Schema Definition</td>
                    <td>
                      <div class="badge badge-warning">Manual</div>
                      <span class="text-sm text-base-content">Write Ecto schema modules</span>
                    </td>
                    <td>
                      <div class="badge badge-success">Automatic</div>
                      <span class="text-sm text-base-content">Introspect from database</span>
                    </td>
                  </tr>
                  <tr>
                    <td class="font-bold text-base-content">Dependencies</td>
                    <td class="text-base-content"><code>ecto</code>, <code>ecto_sql</code>, <code>postgrex</code></td>
                    <td class="text-base-content"><code>postgrex</code> only</td>
                  </tr>
                  <tr>
                    <td class="font-bold text-base-content">Setup Time</td>
                    <td>
                      <div class="badge badge-warning">Moderate</div>
                      <span class="text-sm text-base-content">Define schemas + migrations</span>
                    </td>
                    <td>
                      <div class="badge badge-success">Fast</div>
                      <span class="text-sm text-base-content">Point to existing database</span>
                    </td>
                  </tr>
                  <tr>
                    <td class="font-bold text-base-content">Foreign Keys</td>
                    <td>
                      <div class="badge badge-warning">Manual</div>
                      <span class="text-sm text-base-content">Define associations in schemas</span>
                    </td>
                    <td>
                      <div class="badge badge-success">Automatic</div>
                      <span class="text-sm text-base-content">Detected from database constraints</span>
                    </td>
                  </tr>
                  <tr>
                    <td class="font-bold text-base-content">Database Changes</td>
                    <td>
                      <div class="badge badge-error">Requires update</div>
                      <span class="text-sm text-base-content">Update schema + migration</span>
                    </td>
                    <td>
                      <div class="badge badge-success">Automatic</div>
                      <span class="text-sm text-base-content">Regenerate domain</span>
                    </td>
                  </tr>
                  <tr>
                    <td class="font-bold text-base-content">Write Operations</td>
                    <td>
                      <div class="badge badge-success">Full Support</div>
                      <span class="text-sm text-base-content">Changesets, validations, etc.</span>
                    </td>
                    <td>
                      <div class="badge badge-warning">Limited</div>
                      <span class="text-sm text-base-content">Read-optimized (write support via raw SQL)</span>
                    </td>
                  </tr>
                  <tr>
                    <td class="font-bold text-base-content">Best For</td>
                    <td>
                      <span class="text-sm text-base-content">Full-featured applications with complex business logic</span>
                    </td>
                    <td>
                      <span class="text-sm text-base-content">Admin dashboards, reporting, legacy databases, rapid prototyping</span>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>

            <div class="alert alert-info mt-6">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <div>
                <h3 class="font-bold">Mix and Match!</h3>
                <div class="text-sm">You can use both approaches in the same application - Ecto for business logic and Postgrex for read-only dashboards.</div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- Next Steps -->
      <section class="mb-16">
        <div class="card bg-gradient-to-r from-primary to-secondary text-primary-content shadow-xl">
          <div class="card-body">
            <h2 class="text-3xl font-bold mb-4 text-primary-content">ðŸš€ Next Steps</h2>

            <div class="grid md:grid-cols-2 gap-4">
              <div class="card bg-base-100 text-base-content">
                <div class="card-body">
                  <h3 class="card-title text-lg">Generate More Domains</h3>
                  <p class="text-sm">Create domains for all your tables:</p>
                  <pre class="text-xs mt-2"><code class="language-bash">mix selecto.gen.domain.postgrex --table customers --expand
mix selecto.gen.domain.postgrex --table orders --expand
mix selecto.gen.domain.postgrex --table employees --expand</code></pre>
                </div>
              </div>

              <div class="card bg-base-100 text-base-content">
                <div class="card-body">
                  <h3 class="card-title text-lg">Customize Domains</h3>
                  <p class="text-sm">Edit generated domains to add:</p>
                  <ul class="text-sm list-disc list-inside mt-2 space-y-1">
                    <li>Custom calculated fields</li>
                    <li>Additional filters</li>
                    <li>Join configurations</li>
                    <li>Default selections</li>
                  </ul>
                </div>
              </div>

              <div class="card bg-base-100 text-base-content">
                <div class="card-body">
                  <h3 class="card-title text-lg">Explore Features</h3>
                  <p class="text-sm">Try advanced Selecto features:</p>
                  <ul class="text-sm list-disc list-inside mt-2 space-y-1">
                    <li>Aggregations & grouping</li>
                    <li>Drill-down filtering</li>
                    <li>Chart visualizations</li>
                    <li>Saved views</li>
                  </ul>
                </div>
              </div>

              <div class="card bg-base-100 text-base-content">
                <div class="card-body">
                  <h3 class="card-title text-lg">Read the Docs</h3>
                  <p class="text-sm">Learn more about:</p>
                  <ul class="text-sm list-disc list-inside mt-2 space-y-1">
                    <li>Connection pooling</li>
                    <li>Performance optimization</li>
                    <li>Security best practices</li>
                    <li>Production deployment</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
      </div>
      </div>
    </div>
  </div>
</div>
